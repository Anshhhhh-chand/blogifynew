<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('partials/head') %>
    <title>Content Calendar - Blogify</title>
  </head>
  <body>
    <%- include('partials/nav') %>
    
    <div class="container mt-4">
      <div class="row justify-content-center">
        <div class="col-lg-10">
          <div class="auth-card">
            <div class="text-center mb-4">
              <h2 class="auth-title">üìÖ AI Content Calendar</h2>
              <p class="text-muted">AI-generated blog post ideas tailored to your writing style and niche</p>
            </div>

            <!-- Loading State -->
            <div id="loadingState" class="text-center py-5">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <p class="mt-3 text-muted">ü§ñ Analyzing your content and generating personalized topic suggestions...</p>
            </div>

            <!-- Error State -->
            <div id="errorState" class="alert alert-danger" style="display: none;">
              <h5>‚ùå Error Loading Calendar</h5>
              <p id="errorMessage"></p>
              <button class="btn btn-outline-danger" onclick="loadCalendar()">Try Again</button>
            </div>

            <!-- Calendar Content -->
            <div id="calendarContent" style="display: none;">
              <!-- Calendar Header -->
              <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                  <h4 class="mb-0">Upcoming Content Ideas</h4>
                  <small class="text-muted" id="calendarMeta"></small>
                </div>
                <button class="btn btn-outline-primary btn-sm" onclick="loadCalendar()">
                  üîÑ Refresh Ideas
                </button>
              </div>

              <!-- Calendar Table -->
              <div class="table-responsive">
                <table class="table table-hover">
                  <thead class="table-light">
                    <tr>
                      <th style="width: 40%;">üìù Topic</th>
                      <th style="width: 25%;">üìä Traffic Potential</th>
                      <th style="width: 15%;">‚è±Ô∏è Read Time</th>
                      <th style="width: 20%;">üìÖ Suggested Date</th>
                    </tr>
                  </thead>
                  <tbody id="calendarTableBody">
                    <!-- Content will be populated by JavaScript -->
                  </tbody>
                </table>
              </div>

              <!-- Action Buttons -->
              <div class="text-center mt-4">
                <a href="/blog/add-new" class="btn btn-primary me-2">‚úçÔ∏è Start Writing</a>
                <button class="btn btn-outline-secondary" onclick="exportCalendar()">üì§ Export Calendar</button>
              </div>
            </div>

            <!-- Empty State -->
            <div id="emptyState" class="text-center py-5" style="display: none;">
              <div class="mb-4">
                <i class="fas fa-pen-nib fa-3x text-muted"></i>
              </div>
              <h4>No Content Ideas Yet</h4>
              <p class="text-muted">Write a few blog posts first, then AI can generate personalized content suggestions for you!</p>
              <a href="/blog/add-new" class="btn btn-primary">Write Your First Post</a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <%- include('./partials/footer') %>
    <%- include('./partials/scripts') %>
    
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      loadCalendar();
    });

    async function loadCalendar() {
      const loadingState = document.getElementById('loadingState');
      const errorState = document.getElementById('errorState');
      const calendarContent = document.getElementById('calendarContent');
      const emptyState = document.getElementById('emptyState');
      const calendarTableBody = document.getElementById('calendarTableBody');
      const calendarMeta = document.getElementById('calendarMeta');
      const errorMessage = document.getElementById('errorMessage');

      // Show loading state
      loadingState.style.display = 'block';
      errorState.style.display = 'none';
      calendarContent.style.display = 'none';
      emptyState.style.display = 'none';

      try {
        const response = await fetch('/ai/calendar', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ userId: '<%= user._id %>' })
        });

        const data = await response.json();

        if (data.success) {
          const { calendar, basedOnPosts, userNiche } = data.data;

          if (calendar && calendar.length > 0) {
            // Populate calendar table
            calendarTableBody.innerHTML = '';
            calendar.forEach((item, index) => {
              const row = document.createElement('tr');
              
              // Traffic potential badge color
              let badgeClass = 'bg-secondary';
              if (item.predictedTraffic === 'High') badgeClass = 'bg-success';
              else if (item.predictedTraffic === 'Medium') badgeClass = 'bg-warning text-dark';
              
              row.innerHTML = `
                <td>
                  <strong>${item.title}</strong>
                  <br>
                  <small class="text-muted">${item.description}</small>
                </td>
                <td>
                  <span class="badge ${badgeClass}">${item.predictedTraffic}</span>
                </td>
                <td>${item.estimatedReadTime}</td>
                <td>
                  <small>${formatDate(item.suggestedDate)}</small>
                </td>
              `;
              
              // Add click handler to populate title in new post
              row.style.cursor = 'pointer';
              row.addEventListener('click', () => {
                if (confirm(`Start writing "${item.title}"?`)) {
                  window.location.href = `/blog/add-new?title=${encodeURIComponent(item.title)}`;
                }
              });
              
              calendarTableBody.appendChild(row);
            });

            // Update meta information
            calendarMeta.textContent = `Based on ${basedOnPosts} posts ‚Ä¢ ${userNiche} niche ‚Ä¢ Generated ${new Date().toLocaleDateString()}`;
            
            // Show calendar content
            loadingState.style.display = 'none';
            calendarContent.style.display = 'block';
          } else {
            // Show empty state
            loadingState.style.display = 'none';
            emptyState.style.display = 'block';
          }
        } else {
          throw new Error(data.error || 'Failed to load calendar');
        }
      } catch (error) {
        console.error('Error loading calendar:', error);
        errorMessage.textContent = error.message;
        loadingState.style.display = 'none';
        errorState.style.display = 'block';
      }
    }

    function formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-US', { 
        month: 'short', 
        day: 'numeric',
        year: 'numeric'
      });
    }

    function exportCalendar() {
      const table = document.querySelector('.table');
      const rows = Array.from(table.querySelectorAll('tr'));
      
      let csvContent = "Topic,Description,Traffic Potential,Read Time,Suggested Date\n";
      
      rows.slice(1).forEach(row => { // Skip header row
        const cells = Array.from(row.querySelectorAll('td'));
        if (cells.length > 0) {
          const title = cells[0].querySelector('strong').textContent;
          const description = cells[0].querySelector('small').textContent;
          const traffic = cells[1].textContent.trim();
          const readTime = cells[2].textContent.trim();
          const date = cells[3].textContent.trim();
          
          csvContent += `"${title}","${description}","${traffic}","${readTime}","${date}"\n`;
        }
      });

      const blob = new Blob([csvContent], { type: 'text/csv' });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `content-calendar-${new Date().toISOString().split('T')[0]}.csv`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(url);
    }
    </script>
  </body>
</html>
